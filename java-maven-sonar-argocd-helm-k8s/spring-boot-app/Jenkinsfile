pipeline {
    agent any // Normal agent for initial checkout

    environment {
        SONAR_URL = "http://13.51.52.240:9000"
        DOCKER_IMAGE = "araj50074/ultimate-cicd:${BUILD_NUMBER}"
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "araj5074"
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/araj5074/Jenkins-Zero-To-Hero.git'
            }
        }

        stage('Build and Test') {
            agent { label 'docker-enabled-agent' }
            steps {
                sh '''
                  cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                  mvn clean package
                '''
            }
        }

        stage('Static Code Analysis') {
            agent { label 'docker-enabled-agent' }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                      cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                      mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            agent { label 'docker-enabled-agent' }
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                      cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                      docker build -t ${DOCKER_IMAGE} .
                      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                      docker push ${DOCKER_IMAGE}
                    '''
                }
            }
        }

        stage('Update Deployment File') {
            agent any // Can run on normal Jenkins agent
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                      git config user.email "araj5074@gmail.com"
                      git config user.name "Ashutosh Kaushik"
                      sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                      git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                      git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                      git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                    '''
                }
            }
        }
    }
}
